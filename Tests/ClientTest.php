<?php

namespace Insig\AWSBundle\Tests;

use Insig\AWSBundle\Client,
    Insig\AWSBundle\Request,
    Insig\AWSBundle\Response
    ;

/**
 * Test class for Client.
 * Generated by PHPUnit on 2011-02-17 at 11:12:14.
 */
class ClientTest extends \PHPUnit_Framework_TestCase
{
    /**
     * @var Client
     */
    protected $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {
        $this->object = new Client('SECRET_ACCESS_KEY', 'ACCESS_KEY_ID');
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown()
    {
    }

    /**
     * @expectedException Insig\AWSBundle\Exception
     */
    public function testConstructorException()
    {
        // missing constructor parameters will throw an exception
        $aws = new Client();
    }

    public function testDefaultCountryCode()
    {
        $this->assertSame(Client::LOCALE_US, $this->object->getCountryCode());
    }

    /**
     * @expectedException Insig\AWSBundle\Exception
     */
    public function testInvalidCountryCode()
    {
        $this->object->setCountryCode(0);
    }

    public function testSetGetCountryCode()
    {
        $this->object->setCountryCode(Client::LOCALE_UK);
        $this->assertSame(Client::LOCALE_UK, $this->object->getCountryCode());
    }

    /**
     * @covers Client::getSignedRequestURL
     * @expectedException Insig\AWSBundle\Exception
     */
    public function testGetSignedRequestURLThrowsExceptionWithoutRequestParameters()
    {
        $method = new \ReflectionMethod(
            'Insig\AWSBundle\Client',
            'getSignedRequestURL'
        );
        $method->setAccessible(true);
        $method->invoke($this->object);
    }

    /**
     * @covers Client::getSignedRequestURL
     */
    public function testGetSignedRequestURL()
    {
        $method = new \ReflectionMethod(
            'Insig\AWSBundle\Client',
            'getSignedRequestURL'
        );
        $method->setAccessible(true);
        $request = new Request;
        $timestamp = gmdate('Y-m-d\TH:i:s\Z');
        $signedRequestURL = $method->invoke(
            $this->object,
            $request->getParameters()
        );
        $this->assertRegExp(
            '/^http:\/\/ecs\.amazonaws\.com\/onca\/xml\?AWSAccessKeyId=' .
            'ACCESS_KEY_ID&MerchantId=All&ResponseGroup=Small&Service=' .
            'AWSECommerceService&Timestamp=' . urlencode($timestamp) .
            '+&Version=2010-11-01&Signature=[\w\d%]+/', $signedRequestURL
        );
    }

    public function testExecute()
    {
        $request = new Request;
        $response = $this->object->execute($request);
        $this->assertInstanceOf('\Insig\AWSBundle\Response', $response);
    }
}
