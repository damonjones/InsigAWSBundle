<?php

/*
 * This file is part of the InsigAWSBundle package.
 *
 * (c) Damon Jones <damon@insig.net>
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 */

namespace Insig\AWSBundle\Tests;

use Insig\AWSBundle\Request;

/**
 * Test class for Request.
 * Generated by PHPUnit on 2011-02-17 at 12:03:38.
 */
class RequestTest extends \PHPUnit_Framework_TestCase
{
    /**
     * @var Request
     */
    protected $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp()
    {
        $this->object = new Request;
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown()
    {
    }

    public function testGetParameters()
    {
        $this->assertSame(array('MerchantId' => 'All', 'ResponseGroup' => 'Small'), $this->object->getParameters());
    }

    public function testSetGetParameter()
    {
        $this->object->setParameter('Foo', 'Bar');
        $this->assertSame('Bar', $this->object->getParameter('Foo'));
    }

    public function testGetNonexistentParameter()
    {
        $value = $this->object->getParameter('Foo');
        $this->assertNull($value);
    }

    public function dataTestResponseGroups()
    {
        return array(
            // String
            array('', 'Small'),                         // empty, defaults to Small
            array('Images', 'Images'),                  // single value
            array('Images,Small', 'Images,Small'),      // multiple values
            array('Small, *Images', 'Images,Small'),    // with spaces or other illegal characters
            array('Small,Images,', 'Images,Small'),     // trailing comma
            array('Images, Images', 'Images'),          // repeated value
            array('images', 'Small'),                   // case-sensitive, defaults to Small
            array('Aardvarks, Elephants', 'Small'),     // illegal values, defaults to Small
            // Array
            array(array(), 'Small'),                            // empty, defaults to Small
            array(array('Images'), 'Images'),                   // single value
            array(array('Images', 'Small'), 'Images,Small'),    // multiple values
            array(array('Small ',' *Images'), 'Images,Small'),  // with spaces or other illegal characters
            array(array('Small', null), 'Small'),               // null values
            array(array('Images', 'Images'), 'Images'),         // repeated value
            array(array('images'), 'Small'),                    // case-sensitive, defaults to Small
            array(array('Aardvarks', 'Elephants'), 'Small'),    // illegal values, defaults to Small
        );
    }

    /**
     * @dataProvider dataTestResponseGroups()
     * @depends testSetGetParameter
     */
    public function testResponseGroups($input, $expected)
    {
        $this->object->setParameter('ResponseGroup', $input);
        $this->assertSame($expected, $this->object->getParameter('ResponseGroup'));
    }
}
